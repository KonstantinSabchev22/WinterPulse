extends ../layout

block content
  .container
    h1.text-center.mb-5 Твоята количка

    // Section for cart items
    #cart-items.row
      p.text-muted.text-center Все още нямате продукти количката

    // Cart Total
    #cart-total.text-end.mt-3.font-weight-bold

    .checkout-button-container.text-center.mt-4
      button.btn.btn-success.btn-lg(onclick="showCheckoutModal()") Checkout

  // Modal for Checkout Details
  .modal.fade#checkoutModal(tabindex="-1" aria-labelledby="checkoutModalLabel" aria-hidden="false")
    .modal-dialog
      .modal-content
        .modal-header
          h5#checkoutModalLabel.modal-title Checkout Details
          button.btn-close(data-bs-dismiss="modal" aria-label="Close")
        .modal-body
          form#checkoutForm
            .mb-3
              label(for="Име") Name
              input#name.form-control(type="text" placeholder="Въведете вашето име" required)
            .mb-3
              label(for="Държава") Country
              input#country.form-control(type="text" placeholder="Въведете вашта държава" required)
            .mb-3
              label(for="Адрес") Address
              input#address.form-control(type="text" placeholder="Въведете адрес за доставка" required)
            .mb-3
              label(for="payment-method") Payment метод
              select#payment-method.form-select
                option(value="card") кредитна/дебитна карта
                option(value="paypal") PayPal
                option(value="cash") наложен платеж
        .modal-footer
          button.btn.btn-secondary(data-bs-dismiss="modal") Затвори
          button.btn.btn-primary(onclick="checkout()") Подтвърди поръчката

  script.
    function showCheckoutModal() {
      const modal = new bootstrap.Modal(document.getElementById('checkoutModal'));
      modal.show();
    }

    function displayCart() {
      const cart = JSON.parse(sessionStorage.getItem('cart')) || [];
      const cartContainer = document.getElementById('cart-items');
      const cartTotalElement = document.getElementById('cart-total');

      cartContainer.innerHTML = ''; // Clear previous content

      if (cart.length === 0) {
        cartContainer.innerHTML = '<p class="text-muted text-center">No items in cart yet.</p>';
        cartTotalElement.innerHTML = '';
        return;
      }

      let total = 0;

      cart.forEach(item => {
        total += item.price * item.quantity;

        const cartItem = document.createElement('div');
        cartItem.className = 'col-12 mb-3';
        cartItem.innerHTML = `
          <div class="card p-3 d-flex flex-row align-items-center justify-content-between">
            <img src="${item.imageUrl}" alt="${item.productName}" style="width: 60px; height: 60px; border-radius: 5px;">
            <div class="ms-3">
              <strong>${item.productName}</strong> - ${item.quantity} x ${item.price.toFixed(2)} лв
            </div>
            <button class="btn btn-danger btn-sm" onclick="removeFromCart(${item.productId})">Remove</button>
          </div>
        `;
        cartContainer.appendChild(cartItem);
      });

      cartTotalElement.innerHTML = `Total: ${total.toFixed(2)} лв`;
    }

    function removeFromCart(productId) {
      let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
      cart = cart.filter(item => item.productId !== productId);
      sessionStorage.setItem('cart', JSON.stringify(cart));
      displayCart();
      updateCartCount(); // To refresh cart count in navbar
      showToast('info', 'Product removed from the cart.');
    }

    document.addEventListener('DOMContentLoaded', displayCart);

    async function checkout() {
      const cart = JSON.parse(sessionStorage.getItem('cart')) || [];
      const name = document.getElementById('name').value.trim();
      const country = document.getElementById('country').value.trim();
      const address = document.getElementById('address').value.trim();
      const paymentMethod = document.getElementById('payment-method').value; // No logic yet

      if (!name || !country || !address) {
        showToast('info', 'Please fill in all required fields.');
        return;
      }

      if (cart.length === 0) {
        showToast('info', 'Your cart is empty.');
        return;
      }

      try {
        const response = await fetch('/cart/checkout', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ cartItems: cart, name, country, address, paymentMethod })
        });

        const result = await response.json();

        if (response.ok) {
            showToast('success', result.message);
            sessionStorage.removeItem('cart');
            window.location.href = '/';
        } else {
            showToast('error', result.message);
        }
      } catch (error) {
        console.error('Checkout error:', error);
        showToast('error', 'Error processing your order.');
      }
    }