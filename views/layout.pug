doctype html
html
  head
    title= title
    link(rel='stylesheet', href='/stylesheets/style.css')
    link(rel="stylesheet", href="/bootstrap/css/bootstrap.min.css")
    link(rel='stylesheet', href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css")
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css")
    link(rel='stylesheet', href='/stylesheets/loginForm.css')
    link(rel='stylesheet', href='/stylesheets/register.css')
    link(rel='stylesheet', href='/stylesheets/sidebar.css')
  body
    //- Navbar remains unchanged
    nav.navbar.navbar-expand-lg.navbar-dark.bg-dark
      .container-fluid
        a.navbar-brand(href='#')
          img(width='70' height='70' src='/images/Snowboard Logo white.png')
        button.navbar-toggler(type='button' data-bs-toggle='collapse' data-bs-target='#navbarSupportedContent' aria-controls='navbarSupportedContent' aria-expanded='false' aria-label='Toggle navigation')
          span.navbar-toggler-icon
        #navbarSupportedContent.collapse.navbar-collapse
          ul.navbar-nav.me-auto.mb-2.mb-lg-0
            li.nav-item
              a.nav-link.active(aria-current='page' href='/') Начало
            if user
              li.nav-item
                a.nav-link(href='/products/favorites') Моите любими
            li.nav-item
              a.nav-link(href='/products') Всички сноуборди
          form.d-flex(action='/products' method='GET' role='search' style='position: relative;')
            input#productSearch.form-control.me-2(name='productFilter' type='search' placeholder='продукт' aria-label='Search')
            .autocomplete-results(style='position: absolute; top: 100%; left: 0; width: 100%; background-color: #fff; border: 1px solid #ccc; z-index: 10; border-radius: 4px; display: none;')
            button.btn.btn-outline-success(type='submit') Търси
          ul.nav.navbar-nav.navbar-right
            // Cart icon with counter badge
            li.nav-item.position-relative
              a.nav-link(href='/cart')
                img(src='/images/cart.png' alt='Cart' style='width:32px; height:32px;')
                span#cart-count.badge.bg-danger.position-absolute 0 // initial cart count
            if !user
              li.nav-item
                a.nav-link(href='/users/register')
                  i.fas.fa-user.link-icon
                  span Регистрация
              li.nav-item
                a.nav-link(href='/users/login')
                  i.fas.fa-sign-in-alt.link-icon
                  span Влизане
            else 
              li.nav-item
                a.nav-link(href='/users/logout')
                  i.fas.fa-sign-in-alt.link-icon
                  span Изход
    .main-content
      block content




    script(src="/bootstrap/js/bootstrap.bundle.min.js")
    script(src="/javascripts/searchBar.js")
    script.

      function showToast(type, message){
        const toastContainer = document.getElementById('toast-container') || document.createElement('div');

        if (!toastContainer.id) {
          toastContainer.id = 'toast-container';
          toastContainer.className = 'position-fixed top-0 end-0 p-3';
          document.body.appendChild(toastContainer);
        }
        const toastElement = document.createElement('div');

        toastElement.className = `toast align-items-center text-bg-${type} border-0`;
        toastElement.setAttribute('role', 'alert');
        toastElement.innerHTML = `
          <div class="d-flex">
            <div class="toast-body">
              ${message}
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
          </div>
        `;

        toastContainer.appendChild(toastElement);

        const toast = new bootstrap.Toast(toastElement);
        toast.show();

        toastElement.addEventListener('hidden.bs.toast', () => {
          toastElement.remove();
        });   
      }
      document.addEventListener('click', (e) => {
        if (e.target.classList.contains('btn-close')) {
          const toastElement = e.target.closest('.toast');
          const toastInstance = bootstrap.Toast.getInstance(toastElement);
          if (toastInstance) toastInstance.hide();
        }
      });
      // Function to update cart count in navbar
      function updateCartCount() {
          const cart = JSON.parse(sessionStorage.getItem('cart')) || [];
          const cartCount = cart.reduce((total, item) => total + item.quantity, 0);
          document.getElementById('cart-count').textContent = cartCount;
      }

      // Initialize cart count on page load
      document.addEventListener('DOMContentLoaded', updateCartCount);

      
